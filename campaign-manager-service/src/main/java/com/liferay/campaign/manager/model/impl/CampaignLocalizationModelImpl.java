/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.campaign.manager.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.campaign.manager.model.CampaignLocalization;
import com.liferay.campaign.manager.model.CampaignLocalizationModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CampaignLocalization service. Represents a row in the &quot;CampaignLocalization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CampaignLocalizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CampaignLocalizationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CampaignLocalizationImpl
 * @see CampaignLocalization
 * @see CampaignLocalizationModel
 * @generated
 */
@ProviderType
public class CampaignLocalizationModelImpl extends BaseModelImpl<CampaignLocalization>
	implements CampaignLocalizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a campaign localization model instance should use the {@link CampaignLocalization} interface instead.
	 */
	public static final String TABLE_NAME = "CampaignLocalization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "campaignLocalizationId", Types.BIGINT },
			{ "campaignId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "languageId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("campaignLocalizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("campaignId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("languageId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table CampaignLocalization (campaignLocalizationId LONG not null primary key,campaignId LONG,name VARCHAR(140) null,description VARCHAR(340) null,languageId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CampaignLocalization";
	public static final String ORDER_BY_JPQL = " ORDER BY campaignLocalization.campaignLocalizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CampaignLocalization.campaignLocalizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.campaign.manager.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.campaign.manager.model.CampaignLocalization"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.campaign.manager.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.campaign.manager.model.CampaignLocalization"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.campaign.manager.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.campaign.manager.model.CampaignLocalization"),
			true);
	public static final long CAMPAIGNID_COLUMN_BITMASK = 1L;
	public static final long LANGUAGEID_COLUMN_BITMASK = 2L;
	public static final long CAMPAIGNLOCALIZATIONID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.campaign.manager.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.campaign.manager.model.CampaignLocalization"));

	public CampaignLocalizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _campaignLocalizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCampaignLocalizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _campaignLocalizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CampaignLocalization.class;
	}

	@Override
	public String getModelClassName() {
		return CampaignLocalization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("campaignLocalizationId", getCampaignLocalizationId());
		attributes.put("campaignId", getCampaignId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("languageId", getLanguageId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long campaignLocalizationId = (Long)attributes.get(
				"campaignLocalizationId");

		if (campaignLocalizationId != null) {
			setCampaignLocalizationId(campaignLocalizationId);
		}

		Long campaignId = (Long)attributes.get("campaignId");

		if (campaignId != null) {
			setCampaignId(campaignId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String languageId = (String)attributes.get("languageId");

		if (languageId != null) {
			setLanguageId(languageId);
		}
	}

	@Override
	public long getCampaignLocalizationId() {
		return _campaignLocalizationId;
	}

	@Override
	public void setCampaignLocalizationId(long campaignLocalizationId) {
		_campaignLocalizationId = campaignLocalizationId;
	}

	@Override
	public long getCampaignId() {
		return _campaignId;
	}

	@Override
	public void setCampaignId(long campaignId) {
		_columnBitmask |= CAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalCampaignId) {
			_setOriginalCampaignId = true;

			_originalCampaignId = _campaignId;
		}

		_campaignId = campaignId;
	}

	public long getOriginalCampaignId() {
		return _originalCampaignId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getLanguageId() {
		if (_languageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _languageId;
		}
	}

	@Override
	public void setLanguageId(String languageId) {
		_columnBitmask |= LANGUAGEID_COLUMN_BITMASK;

		if (_originalLanguageId == null) {
			_originalLanguageId = _languageId;
		}

		_languageId = languageId;
	}

	public String getOriginalLanguageId() {
		return GetterUtil.getString(_originalLanguageId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CampaignLocalization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CampaignLocalization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CampaignLocalization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CampaignLocalizationImpl campaignLocalizationImpl = new CampaignLocalizationImpl();

		campaignLocalizationImpl.setCampaignLocalizationId(getCampaignLocalizationId());
		campaignLocalizationImpl.setCampaignId(getCampaignId());
		campaignLocalizationImpl.setName(getName());
		campaignLocalizationImpl.setDescription(getDescription());
		campaignLocalizationImpl.setLanguageId(getLanguageId());

		campaignLocalizationImpl.resetOriginalValues();

		return campaignLocalizationImpl;
	}

	@Override
	public int compareTo(CampaignLocalization campaignLocalization) {
		long primaryKey = campaignLocalization.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CampaignLocalization)) {
			return false;
		}

		CampaignLocalization campaignLocalization = (CampaignLocalization)obj;

		long primaryKey = campaignLocalization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CampaignLocalizationModelImpl campaignLocalizationModelImpl = this;

		campaignLocalizationModelImpl._originalCampaignId = campaignLocalizationModelImpl._campaignId;

		campaignLocalizationModelImpl._setOriginalCampaignId = false;

		campaignLocalizationModelImpl._originalLanguageId = campaignLocalizationModelImpl._languageId;

		campaignLocalizationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CampaignLocalization> toCacheModel() {
		CampaignLocalizationCacheModel campaignLocalizationCacheModel = new CampaignLocalizationCacheModel();

		campaignLocalizationCacheModel.campaignLocalizationId = getCampaignLocalizationId();

		campaignLocalizationCacheModel.campaignId = getCampaignId();

		campaignLocalizationCacheModel.name = getName();

		String name = campaignLocalizationCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			campaignLocalizationCacheModel.name = null;
		}

		campaignLocalizationCacheModel.description = getDescription();

		String description = campaignLocalizationCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			campaignLocalizationCacheModel.description = null;
		}

		campaignLocalizationCacheModel.languageId = getLanguageId();

		String languageId = campaignLocalizationCacheModel.languageId;

		if ((languageId != null) && (languageId.length() == 0)) {
			campaignLocalizationCacheModel.languageId = null;
		}

		return campaignLocalizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{campaignLocalizationId=");
		sb.append(getCampaignLocalizationId());
		sb.append(", campaignId=");
		sb.append(getCampaignId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", languageId=");
		sb.append(getLanguageId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.campaign.manager.model.CampaignLocalization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>campaignLocalizationId</column-name><column-value><![CDATA[");
		sb.append(getCampaignLocalizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>campaignId</column-name><column-value><![CDATA[");
		sb.append(getCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>languageId</column-name><column-value><![CDATA[");
		sb.append(getLanguageId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CampaignLocalization.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CampaignLocalization.class
		};
	private long _campaignLocalizationId;
	private long _campaignId;
	private long _originalCampaignId;
	private boolean _setOriginalCampaignId;
	private String _name;
	private String _description;
	private String _languageId;
	private String _originalLanguageId;
	private long _columnBitmask;
	private CampaignLocalization _escapedModel;
}